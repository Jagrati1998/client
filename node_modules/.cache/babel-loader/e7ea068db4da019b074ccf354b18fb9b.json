{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Basic extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          files: null\n        },\n        onSubmit: values => {\n          console.log({\n            files: values.files.map(file => ({\n              fileName: file.name,\n              type: file.type,\n              size: `${file.size} bytes`\n            }))\n          });\n        },\n        validationSchema: Yup.object().shape({\n          files: Yup.mixed().required()\n        }),\n        render: _ref => {\n          let {\n            values,\n            handleSubmit,\n            setFieldValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: \"Multiple files upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(UploadComponent, {\n                setFieldValue: setFieldValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this), values.files && values.files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [`File:${file.name} Type:${file.type} Size:${file.size} bytes`, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","render","Formik","useDropzone","Yup","Basic","Component","files","values","console","log","map","file","fileName","name","type","size","object","shape","mixed","required","handleSubmit","setFieldValue","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AACjDL,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SADjB;AAEE,QAAA,QAAQ,EAAEC,MAAM,IAAI;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY;AACVH,YAAAA,KAAK,EAAEC,MAAM,CAACD,KAAP,CAAaI,GAAb,CAAiBC,IAAI,KAAK;AAC/BC,cAAAA,QAAQ,EAAED,IAAI,CAACE,IADgB;AAE/BC,cAAAA,IAAI,EAAEH,IAAI,CAACG,IAFoB;AAG/BC,cAAAA,IAAI,EAAG,GAAEJ,IAAI,CAACI,IAAK;AAHY,aAAL,CAArB;AADG,WAAZ;AAOD,SAVH;AAWE,QAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACnCX,UAAAA,KAAK,EAAEH,GAAG,CAACe,KAAJ,GAAYC,QAAZ;AAD4B,SAAnB,CAXpB;AAcE,QAAA,MAAM,EAAE,QAA6C;AAAA,cAA5C;AAAEZ,YAAAA,MAAF;AAAUa,YAAAA,YAAV;AAAwBC,YAAAA;AAAxB,WAA4C;AACnD,8BACE;AAAM,YAAA,QAAQ,EAAED,YAAhB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,eAAD;AAAiB,gBAAA,aAAa,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIGd,MAAM,CAACD,KAAP,IACCC,MAAM,CAACD,KAAP,CAAaI,GAAb,CAAiB,CAACC,IAAD,EAAOW,CAAP,kBACf;AAAA,2BACI,QAAOX,IAAI,CAACE,IAAK,SAAQF,IAAI,CAACG,IAAK,SACnCH,IAAI,CAACI,IACN,QAHH,EAGY,GAHZ;AAAA,iBAASO,CAAT;AAAA;AAAA;AAAA;AAAA,sBADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD;AAnCH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AA3CgD","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as Yup from \"yup\";\n\nexport default class Basic extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Formik\n          initialValues={{ files: null }}\n          onSubmit={values => {\n            console.log({\n              files: values.files.map(file => ({\n                fileName: file.name,\n                type: file.type,\n                size: `${file.size} bytes`\n              }))\n            });\n          }}\n          validationSchema={Yup.object().shape({\n            files: Yup.mixed().required()\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"file\">Multiple files upload</label>\n\n                  <UploadComponent setFieldValue={setFieldValue} />\n                  {values.files &&\n                    values.files.map((file, i) => (\n                      <li key={i}>\n                        {`File:${file.name} Type:${file.type} Size:${\n                          file.size\n                        } bytes`}{\" \"}\n                      </li>\n                    ))}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  submit\n                </button>\n              </form>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}