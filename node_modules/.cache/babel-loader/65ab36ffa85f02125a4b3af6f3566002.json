{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Accept(props) {\n  _s();\n\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg,image/png'\n  });\n  const acceptedFileItems = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  const fileRejectionItems = fileRejections.map(_ref => {\n    let {\n      file,\n      errors\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.path, \" - \", file.size, \" bytes\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: e.message\n        }, e.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, file.path, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"(Only *.jpeg and *.png images will be accepted)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Accepted files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedFileItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Rejected files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileRejectionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accept, \"yXCgq07ksXwRp3Sha5xhI1Qia8g=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Accept;\n\n/*#__PURE__*/\n_jsxDEV(Accept, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Accept\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","useDropzone","Accept","props","acceptedFiles","fileRejections","getRootProps","getInputProps","accept","acceptedFileItems","map","file","path","size","fileRejectionItems","errors","e","message","code","className"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKFN,WAAW,CAAC;AACdO,IAAAA,MAAM,EAAE;AADM,GAAD,CALf;AASA,QAAMC,iBAAiB,GAAGL,aAAa,CAACM,GAAd,CAAkBC,IAAI,iBAC9C;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADwB,CAA1B;AAMA,QAAME,kBAAkB,GAAGT,cAAc,CAACK,GAAf,CAAmB;AAAA,QAAC;AAAEC,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAAD;AAAA,wBAC5C;AAAA,iBACGJ,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,yBAEE;AAAA,kBACGE,MAAM,CAACL,GAAP,CAAWM,CAAC,iBACX;AAAA,oBAAkBA,CAAC,CAACC;AAApB,WAASD,CAAC,CAACE,IAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAASP,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,YAD4C;AAAA,GAAnB,CAA3B;AAWA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,oBAASN,YAAY,CAAC;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAD,CAArB;AAAA,8BACE,sBAAWZ,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1CQZ,M;UAMHD,W;;;KANGC,M;;AA4CT;AAAA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nfunction Accept(props) {\n  const {\n    acceptedFiles,\n    fileRejections,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg,image/png'\n  });\n\n  const acceptedFileItems = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n      <ul>\n        {errors.map(e => (\n          <li key={e.code}>{e.message}</li>\n        ))}\n      </ul>\n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <ul>{acceptedFileItems}</ul>\n        <h4>Rejected files</h4>\n        <ul>{fileRejectionItems}</ul>\n      </aside>\n    </section>\n  );\n}\n\n<Accept />"]},"metadata":{},"sourceType":"module"}