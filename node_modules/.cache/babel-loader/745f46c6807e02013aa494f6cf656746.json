{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Basic(props) {\n  _s();\n\n  const {\n    acceptedFiles,\n    open,\n    fileRejections,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg,image/png',\n    noClick: true,\n    noKeyboard: true\n  });\n  const acceptedFileItems = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n  const fileRejectionItems = fileRejections.map(_ref => {\n    let {\n      file,\n      errors\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.path, \" - \", file.size, \" bytes\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: e.message\n        }, e.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, file.path, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  });\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"(Only *.jpeg and *.png images will be accepted)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Accepted files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedFileItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Rejected files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: fileRejectionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Basic, \"deew38pzLsGfc04zfzvnvuqGi+E=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Basic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","useDropzone","Basic","props","acceptedFiles","open","fileRejections","getRootProps","getInputProps","accept","noClick","noKeyboard","acceptedFileItems","map","file","path","size","fileRejectionItems","errors","e","message","code","files","className"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElC,QAAM;AACLC,IAAAA,aADK;AAELC,IAAAA,IAFK;AAGLC,IAAAA,cAHK;AAILC,IAAAA,YAJK;AAKLC,IAAAA;AALK,MAMHP,WAAW,CAAC;AACdQ,IAAAA,MAAM,EAAE,sBADM;AAEdC,IAAAA,OAAO,EAAE,IAFK;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAAD,CANd;AAYD,QAAMC,iBAAiB,GAAGR,aAAa,CAACS,GAAd,CAAkBC,IAAI,iBAC9C;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADwB,CAA1B;AAMA,QAAME,kBAAkB,GAAGX,cAAc,CAACO,GAAf,CAAmB;AAAA,QAAC;AAAEC,MAAAA,IAAF;AAAQI,MAAAA;AAAR,KAAD;AAAA,wBAC5C;AAAA,iBACGJ,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,yBAEE;AAAA,kBACGE,MAAM,CAACL,GAAP,CAAWM,CAAC,iBACX;AAAA,oBAAkBA,CAAC,CAACC;AAApB,WAASD,CAAC,CAACE,IAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAASP,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,YAD4C;AAAA,GAAnB,CAA3B;AAWA,QAAMO,KAAK,GAAGlB,aAAa,CAACS,GAAd,CAAkBC,IAAI,iBAClC;AAAA,eACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,KAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAMA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,oBAASR,YAAY,CAAC;AAAEgB,QAAAA,SAAS,EAAE;AAAb,OAAD,CAArB;AAAA,8BACE,sBAAWf,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApDuBf,K;UAQlBD,W;;;KARkBC,K","sourcesContent":["import React from 'react';\nimport {useDropzone} from 'react-dropzone';\n\nexport default function Basic(props) {\n  \n   const {\n    acceptedFiles,\n    open,\n    fileRejections,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/jpeg,image/png',\n    noClick: true,\n    noKeyboard: true\n  });\n\n  const acceptedFileItems = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const fileRejectionItems = fileRejections.map(({ file, errors }) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n      <ul>\n        {errors.map(e => (\n          <li key={e.code}>{e.message}</li>\n        ))}\n      </ul>\n    </li>\n  ));\n\n  const files = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n        <em>(Only *.jpeg and *.png images will be accepted)</em>\n      </div>\n      <aside>\n        <h4>Accepted files</h4>\n        <ul>{acceptedFileItems}</ul>\n        <h4>Rejected files</h4>\n        <ul>{fileRejectionItems}</ul>\n      </aside>\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}