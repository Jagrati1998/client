{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/addfileComponent.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n  lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n  dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n    return moment().diff(moment(value), \"years\") >= 1;\n  }),\n  file: Yup.mixed().required(\"image is Required\")\n});\n\nclass Thumb extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false,\n      thumb: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          loading: false,\n          thumb: reader.result\n        });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const {\n      loading,\n      thumb\n    } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumb,\n      alt: file.name,\n      className: \"img-thumbnail mt-2\",\n      height: 200,\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class Addfile extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fname: \"\",\n          lname: \"\",\n          email: \"\",\n          password: \"\",\n          dob: \"\",\n          file: \"\"\n        },\n        onSubmit: values => {\n          alert(JSON.stringify({\n            fileName: values.file.name,\n            type: values.file.type,\n            size: `${values.file.size} bytes`\n          }, null, 2));\n        },\n        validationSchema: LoginSchema,\n        render: _ref => {\n          let {\n            values,\n            errors,\n            status,\n            touched,\n            handleSubmit,\n            setFieldValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fname\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"fname\",\n                placeholder: \"Enter first name\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"fname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lname\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"lname\",\n                placeholder: \"Enter last name\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"lname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter email\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"email\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"mt-3\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter password\",\n                className: `mt-2 form-control\n                        ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"password\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dob\",\n                className: \"mt-3\",\n                children: \"Date Of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"date\",\n                name: \"dob\",\n                placeholder: \"Enter Date Of Birth\",\n                className: `mt-2 form-control\n                        ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"dob\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"file\",\n                children: \"File upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file\",\n                name: \"file\",\n                type: \"file\",\n                onChange: event => {\n                  setFieldValue(\"file\", event.currentTarget.files[0]);\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Thumb, {\n                file: values.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/addfileComponent.js"],"names":["React","render","Formik","Field","Form","ErrorMessage","Yup","LoginSchema","object","shape","fname","string","min","required","lname","email","password","dob","test","value","moment","diff","file","mixed","Thumb","Component","state","loading","thumb","undefined","componentWillReceiveProps","nextProps","setState","reader","FileReader","onloadend","result","readAsDataURL","props","name","Addfile","values","alert","JSON","stringify","fileName","type","size","errors","status","touched","handleSubmit","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Formik ,Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nconst LoginSchema = Yup.object().shape({\n    fname: Yup.string()\n    .min(3, \"fname must be 3 characters at minimum\")\n    .required(\"first name is required\"),\n    lname: Yup.string()\n    .min(3, \"lname must be 3 characters at minimum\")\n    .required(\"last name is required\"),\n    email: Yup.string()\n      .email(\"Invalid email address format\")\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .min(3, \"Password must be 3 characters at minimum\")\n      .required(\"Password is required\"),\n      dob:Yup.string()\n      .required(\"DOB is Required\")\n     \n      .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n        return moment().diff(moment(value), \"years\") >= 1;\n      }),\n      file: Yup.mixed().required(\"image is Required\")\n  });\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n\nexport default class Addfile extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Formik \n         initialValues={{ fname:\"\",lname:\"\",email: \"\", password: \"\" ,dob:\"\", file: \"\" }}\n          onSubmit={(values) => {\n            alert(\n              JSON.stringify(\n                { \n                  fileName: values.file.name, \n                  type: values.file.type,\n                  size: `${values.file.size} bytes`\n                },\n                null,\n                2\n              )\n            );\n          }} \n          validationSchema={LoginSchema}\n         \n          render={({ values, errors, status, touched , handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"fname\">First Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"fname\"\n                        placeholder=\"Enter first name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"fname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"lname\">Last Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"lname\"\n                        placeholder=\"Enter last name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"lname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"email\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\" className=\"mt-3\">\n                        Password\n                      </label>\n                      <Field\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.password && errors.password\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"password\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"dob\" className=\"mt-3\">\n                        Date Of Birth\n                      </label>\n                      <Field\n                        type=\"date\"\n                        name=\"dob\"\n                        placeholder=\"Enter Date Of Birth\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.dob && errors.dob\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"dob\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                <div className=\"form-group\">\n                  <label for=\"file\">File upload</label>\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                  }} className=\"form-control\" />\n                  <Thumb file={values.file} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n              </form>\n            );\n          }} />\n      </div>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}