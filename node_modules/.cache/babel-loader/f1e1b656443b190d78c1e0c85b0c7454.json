{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nclass Adduserfun extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        password: \"\",\n        dob: \"\",\n        profileImg: \"\"\n      },\n      validationSchema: Yup.object().shape({\n        fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n        lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n        email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n        password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n        dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n          return moment().diff(moment(value), \"years\") >= 1;\n        }),\n        profileImg: Yup.mixed().required(\"image is Required\")\n      }),\n      onSubmit: values => {\n        // console.log(values);\n        const formData = new FormData();\n        formData.append('fname', values.fname);\n        formData.append('lname', values.lname);\n        formData.append('email', values.email);\n        formData.append('password', values.password);\n        formData.append('dob', values.dob);\n        formData.append('profileImg', values.profileImg); // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(values, null, 4))\n\n        axios.post(\"http://localhost:4000/users/add-user\", formData).then(console.log); // catch(console.error);\n\n        resetForm({});\n      },\n      render: _ref => {\n        let {\n          errors,\n          status,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"fname\",\n              placeholder: \"Enter first name\",\n              autoComplete: \"off\",\n              className: `mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"fname\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"lname\",\n              placeholder: \"Enter last name\",\n              autoComplete: \"off\",\n              className: `mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"lname\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter email\",\n              autoComplete: \"off\",\n              className: `mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"email\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"mt-3\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter password\",\n              className: `mt-2 form-control\n                        ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"password\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dob\",\n              className: \"mt-3\",\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"date\",\n              name: \"dob\",\n              placeholder: \"Enter Date Of Birth\",\n              className: `mt-2 form-control\n                        ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"dob\",\n              className: \"invalid-feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"imagem\",\n              className: \"mt-3\",\n              children: \"Upload Your Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"file\",\n              name: \"profileImg\",\n              type: \"file\",\n              accept: \"image/jpeg\" // onDone={(file) => setFieldValue(\"imagem\", file)} <FileBase64 \n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary mr-2\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"btn btn-secondary\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Adduserfun;","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","axios","Formik","Field","Form","ErrorMessage","Yup","moment","require","Adduserfun","Component","render","fname","lname","email","password","dob","profileImg","object","shape","string","min","required","test","value","diff","mixed","values","formData","FormData","append","post","then","console","log","resetForm","errors","status","touched"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nconst moment = require('moment');\n\nclass Adduserfun extends React.Component {\n    render() {\n        return (\n            <Formik\n                 initialValues={{ fname:\"\",lname:\"\",email: \"\", password: \"\" ,dob:\"\",profileImg:\"\"}}\n                validationSchema={Yup.object().shape({\n                  fname: Yup.string()\n  .min(3, \"fname must be 3 characters at minimum\")\n  .required(\"first name is required\"),\n  lname: Yup.string()\n  .min(3, \"lname must be 3 characters at minimum\")\n  .required(\"last name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n    dob:Yup.string()\n    .required(\"DOB is Required\")\n   \n    .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n      return moment().diff(moment(value), \"years\") >= 1;\n    }),\n    profileImg: Yup.mixed().required(\"image is Required\")\n                })}\n                onSubmit={(values) => {\n                  // console.log(values);\n                  const formData = new FormData();\n\n                  formData.append('fname', values.fname);\n                  formData.append('lname', values.lname);\n                  formData.append('email', values.email);\n                  formData.append('password', values.password);\n                  formData.append('dob', values.dob);\n                  formData.append('profileImg', values.profileImg);\n                 // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(values, null, 4))\n                 axios.post(\"http://localhost:4000/users/add-user\",  formData)\n                 .then(console.log)\n                // catch(console.error);\n        \n            resetForm({});\n                   \n                 \n                    \n                  }}\n              \n              \n                render={({ errors, status, touched }) => (\n                   \n                  <Form encType=\"multipart/form-data\">\n                  <div className=\"form-group\">\n                      <label htmlFor=\"fname\">First Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"fname\"\n                        placeholder=\"Enter first name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"fname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"lname\">Last Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"lname\"\n                        placeholder=\"Enter last name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"lname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"email\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\" className=\"mt-3\">\n                        Password\n                      </label>\n                      <Field\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.password && errors.password\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"password\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"dob\" className=\"mt-3\">\n                        Date Of Birth\n                      </label>\n                      <Field\n                        type=\"date\"\n                        name=\"dob\"\n                        placeholder=\"Enter Date Of Birth\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.dob && errors.dob\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"dob\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"imagem\" className=\"mt-3\">\n                        Upload Your Image\n                      </label>\n                     <br/>\n              \n                      <Field\n                    id=\"file\"\n                    name=\"profileImg\" \n                    type=\"file\"\n                    accept=\"image/jpeg\" \n                  \n                   // onDone={(file) => setFieldValue(\"imagem\", file)} <FileBase64 \n                  />\n                  </div>\n                   \n                   \n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                    </Form>\n                )}\n            />\n        )\n    }\n}\n\nexport default Adduserfun;\n"]},"metadata":{},"sourceType":"module"}