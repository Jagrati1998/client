{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserComponent.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from 'axios';\nimport { useDropzone, Dropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n  lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n  dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n    return moment().diff(moment(value), \"years\") >= 1;\n  }),\n  file: Yup.mixed().required(\"image is Required\")\n});\n\nconst handleFileInput = e => {\n  // handle validations\n  const file = e.target.files[0];\n  if (file.size > 1024) error: \"File size cannot exceed more than 1MB\";else onFileSelectSuccess(file);\n};\n\nexport default class Adduser extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\"\n            },\n            validationSchema: LoginSchema,\n            onSubmit: values => {\n              // console.log(values);\n              axios.post('http://localhost:4000/users/add-user', values).then(res => console.log(res.data));\n              alert(\"Form is validated! Submitting the form...\");\n            },\n            children: _ref => {\n              let {\n                touched,\n                errors,\n                isSubmitting,\n                values,\n                setFieldValue\n              } = _ref;\n              return !isSubmitting ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"fname\",\n                      children: \"First Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      name: \"fname\",\n                      placeholder: \"Enter first name\",\n                      autocomplete: \"off\",\n                      className: `mt-2 form-control\n                          ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"fname\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"lname\",\n                      children: \"Last Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"text\",\n                      name: \"lname\",\n                      placeholder: \"Enter last name\",\n                      autocomplete: \"off\",\n                      className: `mt-2 form-control\n                          ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"lname\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"email\",\n                      children: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"email\",\n                      name: \"email\",\n                      placeholder: \"Enter email\",\n                      autocomplete: \"off\",\n                      className: `mt-2 form-control\n                          ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"email\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"password\",\n                      className: \"mt-3\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"password\",\n                      name: \"password\",\n                      placeholder: \"Enter password\",\n                      className: `mt-2 form-control\n                          ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"password\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"dob\",\n                      className: \"mt-3\",\n                      children: \"Date Of Birth\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      type: \"date\",\n                      name: \"dob\",\n                      placeholder: \"Enter Date Of Birth\",\n                      className: `mt-2 form-control\n                          ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"dob\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"file\",\n                      children: \"Upload your image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      name: \"file\",\n                      type: \"file\",\n                      onChange: handleFileInput,\n                      accept: \"image/jpeg, image/png, image/gif\",\n                      className: `mt-2 form-control\n                   ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      component: \"div\",\n                      name: \"file\",\n                      className: \"invalid-feedback\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 22\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn btn-primary btn-block mt-4\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"p-3 mt-5\",\n                  children: \"Form Submitted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-success mt-3\",\n                  children: \"Thank You for vist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserComponent.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useDropzone","Dropzone","moment","require","LoginSchema","object","shape","fname","string","min","required","lname","email","password","dob","test","value","diff","file","mixed","handleFileInput","e","target","files","size","error","onFileSelectSuccess","Adduser","Component","render","values","post","then","res","console","log","data","alert","touched","errors","isSubmitting","setFieldValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from 'axios';\nimport { useDropzone, Dropzone } from \"react-dropzone\";\nconst moment = require('moment');\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string()\n  .min(3, \"fname must be 3 characters at minimum\")\n  .required(\"first name is required\"),\n  lname: Yup.string()\n  .min(3, \"lname must be 3 characters at minimum\")\n  .required(\"last name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n    dob:Yup.string()\n    .required(\"DOB is Required\")\n    .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n      return moment().diff(moment(value), \"years\") >= 1;\n    }),\n    file: Yup.mixed().required(\"image is Required\")\n});\n\nconst handleFileInput = (e) => {\n  // handle validations\n  const file = e.target.files[0];\n  \n  if (file.size > 1024)\n    error: \"File size cannot exceed more than 1MB\" \n  else onFileSelectSuccess(file);\n};\nexport default class Adduser extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n         \n            <Formik\n            \n              initialValues={{ email: \"\", password: \"\" }}\n              validationSchema={LoginSchema}\n              onSubmit={(values) => {\n               // console.log(values);\n               axios.post('http://localhost:4000/users/add-user', values)\n              .then(res => console.log(res.data));\n                alert(\"Form is validated! Submitting the form...\");\n              }}\n            >\n              {({ touched, errors, isSubmitting, values ,setFieldValue}) =>\n                !isSubmitting ? (\n                  <div>\n                    \n                    <Form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"fname\">First Name</label>\n                        <Field\n                          type=\"text\"\n                          name=\"fname\"\n                          placeholder=\"Enter first name\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"fname\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"lname\">Last Name</label>\n                        <Field\n                          type=\"text\"\n                          name=\"lname\"\n                          placeholder=\"Enter last name\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"lname\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Enter email\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"email\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n  \n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"mt-3\">\n                          Password\n                        </label>\n                        <Field\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter password\"\n                          className={`mt-2 form-control\n                          ${\n                            touched.password && errors.password\n                              ? \"is-invalid\"\n                              : \"\"\n                          }`}\n                        />\n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"password\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"dob\" className=\"mt-3\">\n                          Date Of Birth\n                        </label>\n                        <Field\n                          type=\"date\"\n                          name=\"dob\"\n                          placeholder=\"Enter Date Of Birth\"\n                          className={`mt-2 form-control\n                          ${\n                            touched.dob && errors.dob\n                              ? \"is-invalid\"\n                              : \"\"\n                          }`}\n                        />\n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"dob\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                  <label htmlFor=\"file\">Upload your image</label>\n\n\n                  <Field name=\"file\"  type=\"file\"onChange={handleFileInput} accept=\"image/jpeg, image/png, image/gif\"\n                   className={`mt-2 form-control\n                   ${\n                     touched.dob && errors.dob\n                       ? \"is-invalid\"\n                       : \"\"\n                   }`} />\n                     <ErrorMessage\n                          component=\"div\"\n                          name=\"file\"\n                          className=\"invalid-feedback\"\n                        />\n                </div>\n  \n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block mt-4\"\n                      >\n                        Submit\n                      </button>\n                    </Form>\n                  </div>\n                ) : (\n                  <div>\n                    <h1 className=\"p-3 mt-5\">Form Submitted</h1>\n  \n                    <div className=\"alert alert-success mt-3\">\n                      Thank You for vist\n                    </div>\n                    \n                  </div>\n                )\n              }\n            </Formik>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n  \n\n"]},"metadata":{},"sourceType":"module"}