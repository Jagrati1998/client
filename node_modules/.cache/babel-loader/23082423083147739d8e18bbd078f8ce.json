{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { useDropzone } from 'react-dropzone';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { calendarFormat } from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n  lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n  dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n    return moment().diff(moment(value), \"years\") >= 1;\n  }),\n  profileImg: Yup.mixed().required(\"image is Required\")\n});\n\nclass Thumb extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false,\n      thumb: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          loading: false,\n          thumb: reader.result\n        });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const {\n      loading,\n      thumb\n    } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumb,\n      alt: file.name,\n      className: \"img-thumbnail mt-2\",\n      height: 200,\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class Adduserfun extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmit = values => {\n      alert(JSON.stringify(values, null, 2));\n      const formData = new FormData();\n      formData.append('fname', values.fname);\n      formData.append('lname', values.lname);\n      formData.append('email', values.email);\n      formData.append('password', values.password);\n      formData.append('dob', values.dob);\n      formData.append('profileImg', values.profileImg); // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(values, null, 4))\n\n      axios.post(\"http://localhost:4000/users/add-user\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(console.log); //values.fname= \"\"; \n    };\n  }\n\n  Uploadimage(props) {\n    // alert(\"The function 'test' is executed\");\n\n    /*#__PURE__*/\n    _jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this); // const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n    // const files = acceptedFiles.map(file => (\n    //   <li key={file.path}>\n    //     {file.path} - {file.size} bytes\n    //   </li>\n    // ));\n    // return (\n    //   <section className=\"container\">\n    //     <div {...getRootProps({className: 'dropzone'})}>\n    //       <input {...getInputProps()} />\n    //       <p>Drag 'n' drop some files here, or click to select files</p>\n    //     </div>\n    //     <aside>\n    //       <h4>Files</h4>\n    //       <ul>{files}</ul>\n    //     </aside>\n    //   </section>\n    // );\n\n  }\n\n  // axios.post(\"http://localhost:4000/users/add-user\",  values)\n  // .then(console.log)\n  //  alert('SUCCESS!! ' )\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fname: \"\",\n          lname: \"\",\n          email: \"\",\n          password: \"\",\n          dob: \"\",\n          profileImg: \"\"\n        },\n        validationSchema: LoginSchema,\n        onSubmit: this.handleSubmit,\n        children: [\"// console.log(values); // catch(console.error); //  resetForm(\", \");\", _ref => {\n          let {\n            touched,\n            errors,\n            isSubmitting,\n            values,\n            setFieldValue\n          } = _ref;\n          return !isSubmitting ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"fname\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  name: \"fname\",\n                  placeholder: \"Enter first name\",\n                  autoComplete: \"off\",\n                  className: `mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  component: \"div\",\n                  name: \"fname\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"lname\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  name: \"lname\",\n                  placeholder: \"Enter last name\",\n                  autoComplete: \"off\",\n                  className: `mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  component: \"div\",\n                  name: \"lname\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"email\",\n                  name: \"email\",\n                  placeholder: \"Enter email\",\n                  autoComplete: \"off\",\n                  className: `mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  component: \"div\",\n                  name: \"email\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"mt-3\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"password\",\n                  name: \"password\",\n                  placeholder: \"Enter password\",\n                  className: `mt-2 form-control\n                        ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  component: \"div\",\n                  name: \"password\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"dob\",\n                  className: \"mt-3\",\n                  children: \"Date Of Birth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"date\",\n                  name: \"dob\",\n                  placeholder: \"Enter Date Of Birth\",\n                  className: `mt-2 form-control\n                        ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  component: \"div\",\n                  name: \"dob\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"imagem\",\n                className: \"mt-3\",\n                children: \"Upload Your Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file\",\n                name: \"profile\",\n                type: \"file\",\n                onChange: event => {\n                  const File = event.target.files[0];\n                  setFieldValue(\"profileImg\", File);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary mr-2\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"reset\",\n                  className: \"btn btn-secondary\",\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"p-3 mt-5\",\n              children: \"Form Submitted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-success mt-3\",\n              children: \"Thank You for vist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 19\n          }, this);\n        }]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","axios","useDropzone","Formik","Field","Form","ErrorMessage","Yup","calendarFormat","moment","require","LoginSchema","object","shape","fname","string","min","required","lname","email","password","dob","test","value","diff","profileImg","mixed","Thumb","Component","state","loading","thumb","undefined","componentWillReceiveProps","nextProps","file","setState","reader","FileReader","onloadend","result","readAsDataURL","render","props","name","Adduserfun","handleSubmit","values","alert","JSON","stringify","formData","FormData","append","post","headers","then","console","log","Uploadimage","touched","errors","isSubmitting","setFieldValue","event","File","target","files"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,cAAT,QAA+B,QAA/B;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,WAAW,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GACNC,GADM,CACF,CADE,EACC,uCADD,EAENC,QAFM,CAEG,wBAFH,CAD8B;AAIrCC,EAAAA,KAAK,EAAEX,GAAG,CAACQ,MAAJ,GACNC,GADM,CACF,CADE,EACC,uCADD,EAENC,QAFM,CAEG,uBAFH,CAJ8B;AAOrCE,EAAAA,KAAK,EAAEZ,GAAG,CAACQ,MAAJ,GACJI,KADI,CACE,8BADF,EAEJF,QAFI,CAEK,mBAFL,CAP8B;AAUrCG,EAAAA,QAAQ,EAAEb,GAAG,CAACQ,MAAJ,GACPC,GADO,CACH,CADG,EACA,0CADA,EAEPC,QAFO,CAEE,sBAFF,CAV2B;AAanCI,EAAAA,GAAG,EAACd,GAAG,CAACQ,MAAJ,GACHE,QADG,CACM,iBADN,EAGHK,IAHG,CAGE,KAHF,EAGS,qCAHT,EAGiDC,KAAD,IAAW;AAC7D,WAAOd,MAAM,GAAGe,IAAT,CAAcf,MAAM,CAACc,KAAD,CAApB,EAA6B,OAA7B,KAAyC,CAAhD;AACD,GALG,CAb+B;AAmBnCE,EAAAA,UAAU,EAAElB,GAAG,CAACmB,KAAJ,GAAYT,QAAZ,CAAqB,mBAArB;AAnBuB,CAAnB,CAApB;;AAsBA,MAAMU,KAAN,SAAoB3B,KAAK,CAAC4B,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,KAAK,EAAEC;AAFD,KAD0B;AAAA;;AAMlCC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,CAACA,SAAS,CAACC,IAAf,EAAqB;AAAE;AAAS;;AAEhC,SAAKC,QAAL,CAAc;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAd,EAAiC,MAAM;AACrC,UAAIO,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,MAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB,aAAKH,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,KAAK,EAAEM,MAAM,CAACG;AAAhC,SAAd;AACD,OAFD;;AAIAH,MAAAA,MAAM,CAACI,aAAP,CAAqBP,SAAS,CAACC,IAA/B;AACD,KARD;AASD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKQ,KAAtB;AACA,UAAM;AAAEb,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqB,KAAKF,KAAhC;;AAEA,QAAI,CAACM,IAAL,EAAW;AAAE,aAAO,IAAP;AAAc;;AAE3B,QAAIL,OAAJ,EAAa;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAA2B;;AAE1C,wBAAQ;AAAK,MAAA,GAAG,EAAEC,KAAV;AACN,MAAA,GAAG,EAAEI,IAAI,CAACS,IADJ;AAEN,MAAA,SAAS,EAAC,oBAFJ;AAGN,MAAA,MAAM,EAAE,GAHF;AAIN,MAAA,KAAK,EAAE;AAJD;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD;;AAjCiC;;AAsCpC,eAAe,MAAMC,UAAN,SAAyB7C,KAAK,CAAC4B,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SA4BtDkB,YA5BsD,GA4BxCC,MAAD,IAAY;AAGnBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACA,YAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEUD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,MAAM,CAACjC,KAAhC;AACAqC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,MAAM,CAAC7B,KAAhC;AACAiC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,MAAM,CAAC5B,KAAhC;AACAgC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BN,MAAM,CAAC3B,QAAnC;AACA+B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBN,MAAM,CAAC1B,GAA9B;AACA8B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BN,MAAM,CAACtB,UAArC,EAXS,CAYV;;AACAxB,MAAAA,KAAK,CAACqD,IAAN,CAAW,sCAAX,EAAoDH,QAApD,EAA8D;AAACI,QAAAA,OAAO,EAAE;AACvE,0BAAgB;AADuD;AAAV,OAA9D,EAGCC,IAHD,CAGMC,OAAO,CAACC,GAHd,EAbU,CAiBV;AAIZ,KAjDmD;AAAA;;AAEtDC,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AAClB;;AACC;AAAA,YAAC,IAAD;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,aAFiB,CAKjB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AAyBC;AACA;AACA;AAIAD,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAA,6BACA,QAAC,MAAD;AACK,QAAA,aAAa,EAAE;AAAE5B,UAAAA,KAAK,EAAC,EAAR;AAAWI,UAAAA,KAAK,EAAC,EAAjB;AAAoBC,UAAAA,KAAK,EAAE,EAA3B;AAA+BC,UAAAA,QAAQ,EAAE,EAAzC;AAA6CC,UAAAA,GAAG,EAAC,EAAjD;AAAoDI,UAAAA,UAAU,EAAC;AAA/D,SADpB;AAEI,QAAA,gBAAgB,EAAEd,WAFtB;AAII,QAAA,QAAQ,EAAE,KAAKmC,YAJnB;AAAA,4FAkBQ;AAAA,cAAC;AAAEc,YAAAA,OAAF;AAAWC,YAAAA,MAAX;AAAmBC,YAAAA,YAAnB;AAAiCf,YAAAA,MAAjC;AAAyCgB,YAAAA;AAAzC,WAAD;AAAA,iBACJ,CAACD,YAAD,gBACE;AAAA,mCACA,QAAC,IAAD;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,WAAW,EAAC,kBAHd;AAIE,kBAAA,YAAY,EAAC,KAJf;AAKE,kBAAA,SAAS,EAAG;AACpC,0BAA0BF,OAAO,CAAC9C,KAAR,IAAiB+C,MAAM,CAAC/C,KAAxB,GAAgC,YAAhC,GAA+C,EAAG;AANtD;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAWI,QAAC,YAAD;AACE,kBAAA,SAAS,EAAC,KADZ;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAkBE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,WAAW,EAAC,iBAHd;AAIE,kBAAA,YAAY,EAAC,KAJf;AAKE,kBAAA,SAAS,EAAG;AACpC,0BAA0B8C,OAAO,CAAC1C,KAAR,IAAiB2C,MAAM,CAAC3C,KAAxB,GAAgC,YAAhC,GAA+C,EAAG;AANtD;AAAA;AAAA;AAAA;AAAA,wBAFF,eAWE,QAAC,YAAD;AACE,kBAAA,SAAS,EAAC,KADZ;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF,eAmCE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,OADP;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,WAAW,EAAC,aAHd;AAIE,kBAAA,YAAY,EAAC,KAJf;AAKE,kBAAA,SAAS,EAAG;AACpC,0BAA0B0C,OAAO,CAACzC,KAAR,IAAiB0C,MAAM,CAAC1C,KAAxB,GAAgC,YAAhC,GAA+C,EAAG;AANtD;AAAA;AAAA;AAAA;AAAA,wBAFF,eAWE,QAAC,YAAD;AACE,kBAAA,SAAS,EAAC,KADZ;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnCF,eAqDE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,UAAf;AAA0B,kBAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,UADP;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,WAAW,EAAC,gBAHd;AAIE,kBAAA,SAAS,EAAG;AACpC,0BAC0ByC,OAAO,CAACxC,QAAR,IAAoByC,MAAM,CAACzC,QAA3B,GACI,YADJ,GAEI,EACL;AATH;AAAA;AAAA;AAAA;AAAA,wBAJF,eAeE,QAAC,YAAD;AACE,kBAAA,SAAS,EAAC,KADZ;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,sBArDF,eA0EE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,KAAf;AAAqB,kBAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,IAAI,EAAC,KAFP;AAGE,kBAAA,WAAW,EAAC,qBAHd;AAIE,kBAAA,SAAS,EAAG;AACpC,0BAC0BwC,OAAO,CAACvC,GAAR,IAAewC,MAAM,CAACxC,GAAtB,GACI,YADJ,GAEI,EACL;AATH;AAAA;AAAA;AAAA;AAAA,wBAJF,eAeE,QAAC,YAAD;AACE,kBAAA,SAAS,EAAC,KADZ;AAEE,kBAAA,IAAI,EAAC,KAFP;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1EF,eAgGE;AAAO,gBAAA,OAAO,EAAC,QAAf;AAAwB,gBAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhGF,eAmGG;AAAA;AAAA;AAAA;AAAA,sBAnGH,eAsGG;AACL,gBAAA,EAAE,EAAC,MADE;AAEL,gBAAA,IAAI,EAAC,SAFA;AAGL,gBAAA,IAAI,EAAC,MAHA;AAIL,gBAAA,QAAQ,EAAG2C,KAAD,IAAW;AACnB,wBAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAJ,kBAAAA,aAAa,CAAC,YAAD,EAAeE,IAAf,CAAb;AACD;AAPI;AAAA;AAAA;AAAA;AAAA,sBAtGH,eAiHM;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAuB,kBAAA,SAAS,EAAC,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,kBAAA,IAAI,EAAC,OAAb;AAAqB,kBAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjHN;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADF,gBA0HE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3HE;AAAA,SAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA8JL;;AAzNqD","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {useDropzone} from 'react-dropzone'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { calendarFormat } from 'moment';\nconst moment = require('moment');\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string()\n  .min(3, \"fname must be 3 characters at minimum\")\n  .required(\"first name is required\"),\n  lname: Yup.string()\n  .min(3, \"lname must be 3 characters at minimum\")\n  .required(\"last name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n    dob:Yup.string()\n    .required(\"DOB is Required\")\n   \n    .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n      return moment().diff(moment(value), \"years\") >= 1;\n    }),\n    profileImg: Yup.mixed().required(\"image is Required\")\n});\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n\n\n\nexport default class Adduserfun extends React.Component {\n\n  Uploadimage(props) {\n   // alert(\"The function 'test' is executed\");\n    <Form>\n    <input type=\"file\"  ></input>\n    </Form>\n    // const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n    \n    // const files = acceptedFiles.map(file => (\n    //   <li key={file.path}>\n    //     {file.path} - {file.size} bytes\n    //   </li>\n    // ));\n  \n    // return (\n    //   <section className=\"container\">\n    //     <div {...getRootProps({className: 'dropzone'})}>\n    //       <input {...getInputProps()} />\n    //       <p>Drag 'n' drop some files here, or click to select files</p>\n    //     </div>\n    //     <aside>\n    //       <h4>Files</h4>\n    //       <ul>{files}</ul>\n    //     </aside>\n    //   </section>\n    // );\n  }\n  handleSubmit=(values) => {\n   \n    \n        alert(JSON.stringify(values, null, 2));\n        const formData = new FormData();\n\n                  formData.append('fname', values.fname);\n                  formData.append('lname', values.lname);\n                  formData.append('email', values.email);\n                  formData.append('password', values.password);\n                  formData.append('dob', values.dob);\n                  formData.append('profileImg', values.profileImg);\n                 // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(values, null, 4))\n                 axios.post(\"http://localhost:4000/users/add-user\",  formData, {headers: {\n                  \"Content-Type\": \"multipart/form-data\",\n                },})\n                 .then(console.log)\n                 //values.fname= \"\"; \n               \n                \n       \n    };\n    \n                  \n    // axios.post(\"http://localhost:4000/users/add-user\",  values)\n    // .then(console.log)\n    //  alert('SUCCESS!! ' )\n    \n\n\n    render() {\n        return (\n        \n            <div >\n            <Formik\n                 initialValues={{ fname:\"\",lname:\"\",email: \"\", password: \"\" ,dob:\"\",profileImg:\"\"}}\n                validationSchema={LoginSchema}\n  \n                onSubmit={this.handleSubmit}\n              \n               >\n                  // console.log(values);\n                  \n                // catch(console.error);\n        \n                   //  resetForm({});\n                   \n                 \n                    \n                 \n              \n              \n                   {({ touched, errors, isSubmitting, values ,setFieldValue}) =>\n                !isSubmitting ? (\n                  <div>\n                  <Form >\n                  <div className=\"form-group\">\n                      <label htmlFor=\"fname\">First Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"fname\"\n                        placeholder=\"Enter first name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"fname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"lname\">Last Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"lname\"\n                        placeholder=\"Enter last name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"lname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"email\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\" className=\"mt-3\">\n                        Password\n                      </label>\n                      <Field\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.password && errors.password\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"password\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"dob\" className=\"mt-3\">\n                        Date Of Birth\n                      </label>\n                      <Field\n                        type=\"date\"\n                        name=\"dob\"\n                        placeholder=\"Enter Date Of Birth\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.dob && errors.dob\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"dob\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                   \n                    <label htmlFor=\"imagem\" className=\"mt-3\">\n                        Upload Your Image\n                      </label>\n                     <br/>\n                   \n                    \n                     <input\n                id=\"file\"\n                name=\"profile\"\n                type=\"file\"\n                onChange={(event) => {\n                  const File = event.target.files[0];\n                  setFieldValue(\"profileImg\", File);\n                }}\n              />\n                  \n                   \n                        <div className=\"form-group\">\n                            <button type=\"submit\"  className=\"btn btn-primary mr-2\">Register</button>\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\n                        </div>\n                    </Form>\n                    </div>\n                ) : (\n                  <div>\n                    <h1 className=\"p-3 mt-5\">Form Submitted</h1>\n  \n                    <div className=\"alert alert-success mt-3\">\n                      Thank You for vist\n                    </div>\n                    \n                  </div>\n                )\n              }\n           </Formik>\n          </div>\n       \n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}