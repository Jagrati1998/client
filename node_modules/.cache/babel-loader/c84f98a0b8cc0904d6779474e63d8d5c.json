{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserfunComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n  lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n  dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n    return moment().diff(moment(value), \"years\") >= 1;\n  }),\n  files: Yup.mixed().required()\n});\nexport default class Basic extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          files: null\n        },\n        onSubmit: values => {\n          console.log({\n            files: values.files.map(file => ({\n              fileName: file.name,\n              type: file.type,\n              size: `${file.size} bytes`\n            }))\n          });\n        },\n        render: _ref => {\n          let {\n            values,\n            handleSubmit,\n            setFieldValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fname\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"fname\",\n                placeholder: \"Enter first name\",\n                autocomplete: \"off\",\n                className: `mt-2 form-control\n                          ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"fname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lname\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"lname\",\n                placeholder: \"Enter last name\",\n                autocomplete: \"off\",\n                className: `mt-2 form-control\n                          ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"lname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter email\",\n                autocomplete: \"off\",\n                className: `mt-2 form-control\n                          ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"email\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"mt-3\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter password\",\n                className: `mt-2 form-control\n                          ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"password\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dob\",\n                className: \"mt-3\",\n                children: \"Date Of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"date\",\n                name: \"dob\",\n                placeholder: \"Enter Date Of Birth\",\n                className: `mt-2 form-control\n                          ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"dob\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                children: \"Multiple files upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(UploadComponent, {\n                setFieldValue: setFieldValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), values.files && values.files.map((file, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [`File:${file.name} Type:${file.type} Size:${file.size} bytes`, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst UploadComponent = props => {\n  _s();\n\n  const {\n    setFieldValue\n  } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setFieldValue(\"files\", acceptedFiles);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: \"dropzone\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadComponent, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = UploadComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserfunComponent.js"],"names":["React","render","Formik","useDropzone","Yup","LoginSchema","object","shape","fname","string","min","required","lname","email","password","dob","test","value","moment","diff","files","mixed","Basic","Component","values","console","log","map","file","fileName","name","type","size","handleSubmit","setFieldValue","touched","errors","i","UploadComponent","props","getRootProps","getInputProps","isDragActive","accept","onDrop","acceptedFiles","className"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as Yup from \"yup\";\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string()\n  .min(3, \"fname must be 3 characters at minimum\")\n  .required(\"first name is required\"),\n  lname: Yup.string()\n  .min(3, \"lname must be 3 characters at minimum\")\n  .required(\"last name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(3, \"Password must be 3 characters at minimum\")\n    .required(\"Password is required\"),\n    dob:Yup.string()\n    .required(\"DOB is Required\")\n    .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n      return moment().diff(moment(value), \"years\") >= 1;\n    }),\n    files: Yup.mixed().required()\n});\n\nexport default class Basic extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Formik\n          initialValues={{ files: null }}\n          onSubmit={values => {\n            console.log({\n              files: values.files.map(file => ({\n                fileName: file.name,\n                type: file.type,\n                size: `${file.size} bytes`\n              }))\n            });\n          }}\n          \n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                 <div className=\"form-group\">\n                        <label htmlFor=\"fname\">First Name</label>\n                        <Field\n                          type=\"text\"\n                          name=\"fname\"\n                          placeholder=\"Enter first name\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"fname\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"lname\">Last Name</label>\n                        <Field\n                          type=\"text\"\n                          name=\"lname\"\n                          placeholder=\"Enter last name\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"lname\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Enter email\"\n                          autocomplete=\"off\"\n                          className={`mt-2 form-control\n                          ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                        />\n  \n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"email\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n  \n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"mt-3\">\n                          Password\n                        </label>\n                        <Field\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"Enter password\"\n                          className={`mt-2 form-control\n                          ${\n                            touched.password && errors.password\n                              ? \"is-invalid\"\n                              : \"\"\n                          }`}\n                        />\n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"password\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"dob\" className=\"mt-3\">\n                          Date Of Birth\n                        </label>\n                        <Field\n                          type=\"date\"\n                          name=\"dob\"\n                          placeholder=\"Enter Date Of Birth\"\n                          className={`mt-2 form-control\n                          ${\n                            touched.dob && errors.dob\n                              ? \"is-invalid\"\n                              : \"\"\n                          }`}\n                        />\n                        <ErrorMessage\n                          component=\"div\"\n                          name=\"dob\"\n                          className=\"invalid-feedback\"\n                        />\n                      </div>\n  \n                <div className=\"form-group\">\n                  <label htmlFor=\"file\">Multiple files upload</label>\n\n                  <UploadComponent setFieldValue={setFieldValue} />\n                  {values.files &&\n                    values.files.map((file, i) => (\n                      <li key={i}>\n                        {`File:${file.name} Type:${file.type} Size:${\n                          file.size\n                        } bytes`}{\" \"}\n                      </li>\n                    ))}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  submit\n                </button>\n              </form>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\nconst UploadComponent = props => {\n  const { setFieldValue } = props;\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setFieldValue(\"files\", acceptedFiles);\n    }\n  });\n  return (\n    <div>\n      {}\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}