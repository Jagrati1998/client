{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserComponent.js\",\n    _s = $RefreshSig$();\n\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required()\n});\nexport function Adduser(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n\n  const onSubmit = async values => {\n    setError(null);\n    const response = await axios.post(\"http://localhost:4000/users/add-user\", values).catch(err => {\n      if (err && err.response) setError(err.response.data.message);\n    });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: this.onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: formik.values.password,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Adduser, \"utiYHuuW1GBP1Kv3ufGH3EjGxY0=\", true);\n\n_c = Adduser;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adduser\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserComponent.js"],"names":["React","Formik","Form","Field","ErrorMessage","validationSchema","yup","object","email","string","required","password","Adduser","props","error","setError","useState","onSubmit","values","response","axios","post","catch","err","data","message","alert","formik","useFormik","initialValues","validateOnBlur","handleChange","handleBlur"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AACA,MAAMC,gBAAgB,GAAGC,GAAG,CAACC,MAAJ,CAAW;AAClCC,EAAAA,KAAK,EAAEF,GAAG,CAACG,MAAJ,GAAaC,QAAb,EAD2B;AAElCC,EAAAA,QAAQ,EAAEL,GAAG,CAACG,MAAJ,GAAaC,QAAb;AAFwB,CAAX,CAAzB;AAKA,OAAO,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;;AACE,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACnCH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CACzBC,IADoB,CACf,sCADe,EACyBH,MADzB,EAEpBI,KAFoB,CAEbC,GAAD,IAAS;AACd,UAAIA,GAAG,IAAIA,GAAG,CAACJ,QAAf,EAAyBJ,QAAQ,CAACQ,GAAG,CAACJ,QAAJ,CAAaK,IAAb,CAAkBC,OAAnB,CAAR;AAC1B,KAJoB,CAAvB;;AAMA,QAAIN,QAAJ,EAAc;AACZO,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACD;AACF,GAXC;;AAYF,QAAMC,MAAM,GAAGC,SAAS,CAAC;AACvBC,IAAAA,aAAa,EAAE;AAAErB,MAAAA,KAAK,EAAE,EAAT;AAAaG,MAAAA,QAAQ,EAAE;AAAvB,KADQ;AAEvBmB,IAAAA,cAAc,EAAE,IAFO;AAGvBb,IAAAA,QAHuB;AAIvBZ,IAAAA,gBAAgB,EAAEA;AAJK,GAAD,CAAxB;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,KAAKY,QAArB;AAAA,4BACM,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,KAAK,EAAEU,MAAM,CAACT,MAAP,CAAcV,KAHvB;AAIE,MAAA,QAAQ,EAAEmB,MAAM,CAACI,YAJnB;AAKE,MAAA,MAAM,EAAEJ,MAAM,CAACK;AALjB;AAAA;AAAA;AAAA;AAAA,YADN,eASM,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,KAAK,EAAEL,MAAM,CAACT,MAAP,CAAcP,QAJvB;AAKE,MAAA,QAAQ,EAAEgB,MAAM,CAACI,YALnB;AAME,MAAA,MAAM,EAAEJ,MAAM,CAACK;AANjB;AAAA;AAAA;AAAA;AAAA,YATN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAzCepB,O;;KAAAA,O","sourcesContent":["// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nconst validationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport function Adduser(props) { \n\n  const [error, setError] = useState(null);\n    const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://localhost:4000/users/add-user\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n  const formik = useFormik({\n    initialValues: { email: \"\", password: \"\" },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema,\n  });\n  return (\n    <Form onSubmit={this.onSubmit}>\n          <Input\n            name=\"email\"\n            placeholder=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          \n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n       </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}