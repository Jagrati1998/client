{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserComponent.js\",\n    _s = $RefreshSig$();\n\n// Render Prop\nimport React, { useState } from \"react\";\nimport { Formik, Form, useFormik, Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required()\n});\nexport default function Adduser(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n\n  const onSubmit = async values => {\n    setError(null);\n    const response = await axios.post(\"http://localhost:4000/users/add-user\", values).catch(err => {\n      if (err && err.response) setError(err.response.data.message);\n    });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: this.onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"FName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"FName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Adduser, \"utiYHuuW1GBP1Kv3ufGH3EjGxY0=\", false, function () {\n  return [useFormik];\n});\n\n_c = Adduser;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adduser\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserComponent.js"],"names":["React","useState","Formik","Form","useFormik","Field","ErrorMessage","axios","yup","validationSchema","object","email","string","required","password","Adduser","props","error","setError","onSubmit","values","response","post","catch","err","data","message","alert","formik","initialValues","validateOnBlur","handleChange","handleBlur"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAiCC,KAAjC,EAAwCC,YAAxC,QAA4D,QAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AACA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;AAClCC,EAAAA,KAAK,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,EAD2B;AAElCC,EAAAA,QAAQ,EAAEN,GAAG,CAACI,MAAJ,GAAaC,QAAb;AAFwB,CAAX,CAAzB;AAKA,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,IAAD,CAAlC;;AACE,QAAMkB,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACnCF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,UAAMG,QAAQ,GAAG,MAAMd,KAAK,CACzBe,IADoB,CACf,sCADe,EACyBF,MADzB,EAEpBG,KAFoB,CAEbC,GAAD,IAAS;AACd,UAAIA,GAAG,IAAIA,GAAG,CAACH,QAAf,EAAyBH,QAAQ,CAACM,GAAG,CAACH,QAAJ,CAAaI,IAAb,CAAkBC,OAAnB,CAAR;AAC1B,KAJoB,CAAvB;;AAMA,QAAIL,QAAJ,EAAc;AACZM,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACD;AACF,GAXC;;AAYF,QAAMC,MAAM,GAAGxB,SAAS,CAAC;AACvByB,IAAAA,aAAa,EAAE;AAAElB,MAAAA,KAAK,EAAE,EAAT;AAAaG,MAAAA,QAAQ,EAAE;AAAvB,KADQ;AAEvBgB,IAAAA,cAAc,EAAE,IAFO;AAGvBX,IAAAA,QAHuB;AAIvBV,IAAAA,gBAAgB,EAAEA;AAJK,GAAD,CAAxB;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,KAAKU,QAArB;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEG,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,OAAnB;AACG,QAAA,IAAI,EAAC,OADR;AAEG,QAAA,WAAW,EAAC,OAFf;AAGG,QAAA,KAAK,EAAES,MAAM,CAACR,MAAP,CAAcT,KAHxB;AAIG,QAAA,QAAQ,EAAEiB,MAAM,CAACG,YAJpB;AAKG,QAAA,MAAM,EAAEH,MAAM,CAACI;AALlB;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAED,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,UAAnB;AACE,QAAA,IAAI,EAAC,UADP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,KAAK,EAAEJ,MAAM,CAACR,MAAP,CAAcN,QAJvB;AAKE,QAAA,QAAQ,EAAEc,MAAM,CAACG,YALnB;AAME,QAAA,MAAM,EAAEH,MAAM,CAACI;AANjB;AAAA;AAAA;AAAA;AAAA,cAFC;AAAA;AAAA;AAAA;AAAA;AAAA,YAXP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA9CuBjB,O;UAePX,S;;;KAfOW,O","sourcesContent":["// Render Prop\nimport React, { useState } from \"react\";\nimport { Formik, Form, useFormik,Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport * as yup from \"yup\";\nconst validationSchema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport default function Adduser(props) { \n\n  const [error, setError] = useState(null);\n    const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://localhost:4000/users/add-user\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n  const formik = useFormik({\n    initialValues: { email: \"\", password: \"\" },\n    validateOnBlur: true,\n    onSubmit,\n    validationSchema: validationSchema,\n  });\n  return (\n    <Form onSubmit={this.onSubmit}>\n      <Form.Group controlId=\"FName\">\n          <Form.Label>First Name</Form.Label>\n         <Form.Control type=\"email\" \n            name=\"email\"\n            placeholder=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          </Form.Group>\n           <Form.Group controlId=\"FName\">\n           <Form.Label>First Name</Form.Label>\n          <Form.Control type=\"password\" \n            name=\"password\"\n           \n            placeholder=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          </Form.Group>\n       </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}