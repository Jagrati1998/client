{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/addfileComponent.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Thumb extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false,\n      thumb: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          loading: false,\n          thumb: reader.result\n        });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const {\n      file\n    } = this.props;\n    const {\n      loading,\n      thumb\n    } = this.state;\n\n    if (!file) {\n      return null;\n    }\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 27\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumb,\n      alt: file.name,\n      className: \"img-thumbnail mt-2\",\n      height: 200,\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default class Addfile extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          file: null\n        },\n        onSubmit: values => {\n          alert(JSON.stringify({\n            fileName: values.file.name,\n            type: values.file.type,\n            size: `${values.file.size} bytes`\n          }, null, 2));\n        },\n        validationSchema: yup.object().shape({\n          file: yup.mixed().required()\n        }),\n        render: _ref => {\n          let {\n            values,\n            handleSubmit,\n            setFieldValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"file\",\n                children: \"File upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file\",\n                name: \"file\",\n                type: \"file\",\n                onChange: event => {\n                  setFieldValue(\"file\", event.currentTarget.files[0]);\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Thumb, {\n                file: values.file\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/addfileComponent.js"],"names":["React","render","Formik","Yup","Thumb","Component","state","loading","thumb","undefined","componentWillReceiveProps","nextProps","file","setState","reader","FileReader","onloadend","result","readAsDataURL","props","name","Addfile","values","alert","JSON","stringify","fileName","type","size","yup","object","shape","mixed","required","handleSubmit","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\n\nclass Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}\n\nexport default class Addfile extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Formik \n          initialValues={{ file: null }}\n          onSubmit={(values) => {\n            alert(\n              JSON.stringify(\n                { \n                  fileName: values.file.name, \n                  type: values.file.type,\n                  size: `${values.file.size} bytes`\n                },\n                null,\n                2\n              )\n            );\n          }} \n          validationSchema={yup.object().shape({\n            file: yup.mixed().required(),\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label for=\"file\">File upload</label>\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                  }} className=\"form-control\" />\n                  <Thumb file={values.file} />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n              </form>\n            );\n          }} />\n      </div>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}