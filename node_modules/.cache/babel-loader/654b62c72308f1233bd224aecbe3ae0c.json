{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/adduserComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Adduser = () => {\n  _s();\n\n  const onSubmit = async values => {\n    setError(null);\n    const response = await axios.post(\"http://localhost:4000/users/add-user\", values).catch(err => {\n      if (err && err.response) setError(err.response.data.message);\n    });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Adduser, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Adduser;\nexport default Adduser;\n/*const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://localhost:4000/users/add-user\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Adduser\");","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/adduserComponent.js"],"names":["React","useState","axios","useFormik","Adduser","onSubmit","values","setError","response","post","catch","err","data","message","alert","formik","initialValues","email","JSON","stringify","handleSubmit","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,QAAzB;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjCC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CACzBO,IADoB,CACf,sCADe,EACyBH,MADzB,EAEpBI,KAFoB,CAEbC,GAAD,IAAS;AACd,UAAIA,GAAG,IAAIA,GAAG,CAACH,QAAf,EAAyBD,QAAQ,CAACI,GAAG,CAACH,QAAJ,CAAaI,IAAb,CAAkBC,OAAnB,CAAR;AAC1B,KAJoB,CAAvB;;AAMA,QAAIL,QAAJ,EAAc;AACZM,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACD;AACF,GAXD;;AAaA,QAAMC,MAAM,GAAGZ,SAAS,CAAC;AACvBa,IAAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE;AADM,KADQ;AAIvBZ,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBQ,MAAAA,KAAK,CAACI,IAAI,CAACC,SAAL,CAAeb,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AANsB,GAAD,CAAxB;AAQA,sBACE;AAAM,IAAA,QAAQ,EAAES,MAAM,CAACK,YAAvB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,QAAQ,EAAEL,MAAM,CAACM,YAJnB;AAKE,MAAA,KAAK,EAAEN,MAAM,CAACT,MAAP,CAAcW;AALvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApCD;;GAAMb,O;UAcWD,S;;;KAdXC,O;AAqCN,eAAeA,OAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport { useFormik} from \"formik\";\nconst Adduser = () => {\n  const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://localhost:4000/users/add-user\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };\n  \n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n    },\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\nexport default Adduser\n/*const onSubmit = async (values) => {\n    setError(null);\n    const response = await axios\n      .post(\"http://localhost:4000/users/add-user\", values)\n      .catch((err) => {\n        if (err && err.response) setError(err.response.data.message);\n      });\n\n    if (response) {\n      alert(\"Welcome back in. Authenticating...\");\n    }\n  };*/"]},"metadata":{},"sourceType":"module"}