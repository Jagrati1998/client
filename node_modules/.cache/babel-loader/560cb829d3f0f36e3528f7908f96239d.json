{"ast":null,"code":"var _jsxFileName = \"/home/jagrati/usernex/client/src/components/addfileComponent.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst moment = require('moment');\n\nconst LoginSchema = Yup.object().shape({\n  fname: Yup.string().min(3, \"fname must be 3 characters at minimum\").required(\"first name is required\"),\n  lname: Yup.string().min(3, \"lname must be 3 characters at minimum\").required(\"last name is required\"),\n  email: Yup.string().email(\"Invalid email address format\").required(\"Email is required\"),\n  password: Yup.string().min(3, \"Password must be 3 characters at minimum\").required(\"Password is required\"),\n  dob: Yup.string().required(\"DOB is Required\").test(\"DOB\", \"Please choose a valid date of birth\", value => {\n    return moment().diff(moment(value), \"years\") >= 1;\n  }),\n  file: Yup.mixed().required(\"image is Required\")\n}); // class Thumb extends React.Component {\n//   state = {\n//     loading: false,\n//    // thumb: undefined,\n//   };\n//   componentWillReceiveProps(nextProps) {\n//     if (!nextProps.file) { return; }\n//     this.setState({ loading: true }, () => {\n//       let reader = new FileReader();\n//       reader.onloadend = () => {\n//         this.setState({ loading: false, thumb: reader.result });\n//       };\n//       reader.readAsDataURL(nextProps.file);\n//     });\n//   }\n//   render() {\n//     const { file } = this.props;\n//     const { loading, thumb } = this.state;\n//     if (!file) { return null; }\n//     if (loading) { return <p>loading...</p>; }\n//     return (<></>)\n//   }\n// }\n\nexport default class Addfile extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmit = values => {\n      alert(JSON.stringify({\n        fname: values.fname,\n        lname: values.lname,\n        email: values.email,\n        password: values.password,\n        dob: values.dob,\n        fileName: values.file.name,\n        type: values.file.type,\n        size: `${values.file.size} bytes`\n      }, null, 2));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fname: \"\",\n          lname: \"\",\n          email: \"\",\n          password: \"\",\n          dob: \"\",\n          file: \"\"\n        },\n        validationSchema: LoginSchema,\n        onSubmit: this.handleSubmit,\n        render: _ref => {\n          let {\n            values,\n            errors,\n            status,\n            touched,\n            handleSubmit,\n            setFieldValue\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"fname\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"fname\",\n                placeholder: \"Enter first name\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"fname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lname\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"lname\",\n                placeholder: \"Enter last name\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"lname\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Enter email\",\n                autoComplete: \"off\",\n                className: `mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"email\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"mt-3\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Enter password\",\n                className: `mt-2 form-control\n                        ${touched.password && errors.password ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"password\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dob\",\n                className: \"mt-3\",\n                children: \"Date Of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"date\",\n                name: \"dob\",\n                placeholder: \"Enter Date Of Birth\",\n                className: `mt-2 form-control\n                        ${touched.dob && errors.dob ? \"is-invalid\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                component: \"div\",\n                name: \"dob\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"file\",\n                children: \"File upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file\",\n                name: \"file\",\n                type: \"file\",\n                onChange: event => {\n                  setFieldValue(\"file\", event.currentTarget.files[0]);\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/home/jagrati/usernex/client/src/components/addfileComponent.js"],"names":["React","render","Formik","Field","Form","ErrorMessage","Yup","moment","require","LoginSchema","object","shape","fname","string","min","required","lname","email","password","dob","test","value","diff","file","mixed","Addfile","Component","handleSubmit","values","alert","JSON","stringify","fileName","name","type","size","errors","status","touched","setFieldValue","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Formik ,Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nconst moment = require('moment');\nconst LoginSchema = Yup.object().shape({\n    fname: Yup.string()\n    .min(3, \"fname must be 3 characters at minimum\")\n    .required(\"first name is required\"),\n    lname: Yup.string()\n    .min(3, \"lname must be 3 characters at minimum\")\n    .required(\"last name is required\"),\n    email: Yup.string()\n      .email(\"Invalid email address format\")\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .min(3, \"Password must be 3 characters at minimum\")\n      .required(\"Password is required\"),\n      dob:Yup.string()\n      .required(\"DOB is Required\")\n     \n      .test(\"DOB\", \"Please choose a valid date of birth\", (value) => {\n        return moment().diff(moment(value), \"years\") >= 1;\n      }),\n      file: Yup.mixed().required(\"image is Required\")\n  });\n\n// class Thumb extends React.Component {\n//   state = {\n//     loading: false,\n//    // thumb: undefined,\n//   };\n\n\n//   componentWillReceiveProps(nextProps) {\n//     if (!nextProps.file) { return; }\n\n//     this.setState({ loading: true }, () => {\n//       let reader = new FileReader();\n\n//       reader.onloadend = () => {\n//         this.setState({ loading: false, thumb: reader.result });\n//       };\n\n//       reader.readAsDataURL(nextProps.file);\n//     });\n//   }\n\n//   render() {\n//     const { file } = this.props;\n//     const { loading, thumb } = this.state;\n\n//     if (!file) { return null; }\n\n//     if (loading) { return <p>loading...</p>; }\n\n//     return (<></>)\n//   }\n// }\n\nexport default class Addfile extends React.Component {\n   \n    handleSubmit=(values) => {\n        alert(\n          JSON.stringify(\n            { fname:values.fname,\n              lname:values.lname,\n              email: values.email,\n              password: values.password,\n              dob:values.dob,\n              fileName: values.file.name, \n              type: values.file.type,\n              size: `${values.file.size} bytes`\n            },\n            null,\n            2\n          )\n        );\n      } \n  render() {\n    return (\n      <div className=\"container\">\n        <Formik \n         initialValues={{ fname:\"\",lname:\"\",email: \"\", password: \"\" ,dob:\"\", file: \"\" }}\n         \n          validationSchema={LoginSchema}\n          onSubmit={this.handleSubmit}\n         \n          render={({ values, errors, status, touched , handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                      <label htmlFor=\"fname\">First Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"fname\"\n                        placeholder=\"Enter first name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.fname && errors.fname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"fname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"lname\">Last Name</label>\n                      <Field\n                        type=\"text\"\n                        name=\"lname\"\n                        placeholder=\"Enter last name\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.lname && errors.lname ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"lname\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Field\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        autoComplete=\"off\"\n                        className={`mt-2 form-control\n                        ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                      />\n\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"email\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\" className=\"mt-3\">\n                        Password\n                      </label>\n                      <Field\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.password && errors.password\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"password\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"dob\" className=\"mt-3\">\n                        Date Of Birth\n                      </label>\n                      <Field\n                        type=\"date\"\n                        name=\"dob\"\n                        placeholder=\"Enter Date Of Birth\"\n                        className={`mt-2 form-control\n                        ${\n                          touched.dob && errors.dob\n                            ? \"is-invalid\"\n                            : \"\"\n                        }`}\n                      />\n                      <ErrorMessage\n                        component=\"div\"\n                        name=\"dob\"\n                        className=\"invalid-feedback\"\n                      />\n                    </div>\n                <div className=\"form-group\">\n                  <label for=\"file\">File upload</label>\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                  }} className=\"form-control\" />\n               \n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n              </form>\n            );\n          }} />\n      </div>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}